import streamlit as st

from frontend.utils import change_menu_item
from frontend.general import create_big_button


def _back():
    create_big_button(
        "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
        on_click=change_menu_item,
        kwargs={"item": "diagnosis_patient"},
        key="back_btn",
    )

def show_operation():
    person = st.session_state["current_patient_info"]
    st.title(f"üß™ –û–ø–µ—Ä–∞—Ü–∏—è –ø–∞—Ü–∏–µ–Ω—Ç–∞ {person.fio}")

    slices_status = getattr(person, "slices", None)
    t1_filled = bool(getattr(slices_status, "t1_filled", False)) if slices_status else False
    t2_filled = bool(getattr(slices_status, "t2_filled", False)) if slices_status else False
    t3_filled = bool(getattr(slices_status, "t3_filled", False)) if slices_status else False
    t4_filled = bool(getattr(slices_status, "t4_filled", False)) if slices_status else False
    t5_filled = bool(getattr(slices_status, "t5_filled", False)) if slices_status else False
    t6_filled = bool(getattr(slices_status, "t6_filled", False)) if slices_status else False
    t7_filled = bool(getattr(slices_status, "t7_filled", False)) if slices_status else False
    t8_filled = bool(getattr(slices_status, "t8_filled", False)) if slices_status else False

    col_t1_1, col_t1_2 = st.columns([2, 1])
    with col_t1_1:
        st.markdown(
            f"**–°—Ä–µ–∑ t1 - –ø–æ—Å–ª–µ –∏–Ω–¥—É–∫—Ü–∏–∏**  \n–°—Ç–∞—Ç—É—Å: {'‚úÖ –ó–∞–ø–æ–ª–Ω–µ–Ω–æ' if t1_filled else '‚ùå –ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ'}"
        )
    with col_t1_2:
        create_big_button(
            "–ü–µ—Ä–µ–π—Ç–∏",
            on_click=change_menu_item,
            kwargs={"item": "show_t1_slice"},
            icon="üìù",
            key="t1_btn",
        )

    col_t2_1, col_t2_2 = st.columns([2, 1])
    with col_t2_1:
        st.markdown(
            f"**–°—Ä–µ–∑ t2 - —á–µ—Ä–µ–∑ 15 –º–∏–Ω –ø–æ—Å–ª–µ —ç–ø–∏–¥—É—Ä–∞–ª—å–Ω–æ–≥–æ –±–æ–ª—é—Å–∞**  \n"
            f"–°—Ç–∞—Ç—É—Å: {'‚úÖ –ó–∞–ø–æ–ª–Ω–µ–Ω–æ' if t2_filled else '‚ùå –ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ'}"
        )
    with col_t2_2:
        create_big_button(
            "–ü–µ—Ä–µ–π—Ç–∏",
            on_click=change_menu_item,
            kwargs={"item": "show_t2_slice"},
            icon="üìù",
            key="t2_btn",
        )

    col_t3_1, col_t3_2 = st.columns([2, 1])
    with col_t3_1:
        st.markdown(
            f"**–°—Ä–µ–∑ t3 - –ø–æ—Å–ª–µ –∏–Ω–¥—É–∫—Ü–∏–∏ –∞–Ω–µ—Å—Ç–µ–∑–∏–∏ –∏ –∏–Ω—Ç—É–±–∞—Ü–∏–∏ —Ç—Ä–∞—Ö–µ–∏**  \n"
            f"–°—Ç–∞—Ç—É—Å: {'‚úÖ –ó–∞–ø–æ–ª–Ω–µ–Ω–æ' if t3_filled else '‚ùå –ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ'}"
        )
    with col_t3_2:
        create_big_button(
            "–ü–µ—Ä–µ–π—Ç–∏",
            on_click=change_menu_item,
            kwargs={"item": "show_t3_slice"},
            icon="üìù",
            key="t3_btn",
        )

    col_t4_1, col_t4_2 = st.columns([2, 1])
    with col_t4_1:
        st.markdown(
            f"**–°—Ä–µ–∑ t4 - –ø–æ—Å–ª–µ –∏–Ω—Å—É—Ñ—Ñ–ª—è—Ü–∏–∏ –≥–∞–∑–∞ –≤ –±—Ä—é—à–Ω—É—é –ø–æ–ª–æ—Å—Ç—å**  \n"
            f"–°—Ç–∞—Ç—É—Å: {'‚úÖ –ó–∞–ø–æ–ª–Ω–µ–Ω–æ' if t4_filled else '‚ùå –ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ'}"
        )
    with col_t4_2:
        create_big_button(
            "–ü–µ—Ä–µ–π—Ç–∏",
            on_click=change_menu_item,
            kwargs={"item": "show_t4_slice"},
            icon="üìù",
            key="t4_btn",
        )

    col_t5_1, col_t5_2 = st.columns([2, 1])
    with col_t5_1:
        st.markdown(
            f"**–°—Ä–µ–∑ t5 - –≤ –≥–ª—É–±–æ–∫–æ–º –ø–æ–ª–æ–∂–µ–Ω–∏–∏ –¢—Ä–µ–Ω–¥–µ–ª–µ–Ω–±—É—Ä–≥–∞**  \n"
            f"–°—Ç–∞—Ç—É—Å: {'‚úÖ –ó–∞–ø–æ–ª–Ω–µ–Ω–æ' if t5_filled else '‚ùå –ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ'}"
        )
    with col_t5_2:
        create_big_button(
            "–ü–µ—Ä–µ–π—Ç–∏",
            on_click=change_menu_item,
            kwargs={"item": "show_t5_slice"},
            icon="üìù",
            key="t5_btn",
        )

    col_t6_1, col_t6_2 = st.columns([2, 1])
    with col_t6_1:
        st.markdown(
            f"**–°—Ä–µ–∑ t6 - –æ—Å–Ω–æ–≤–Ω–æ–π —ç—Ç–∞–ø –æ–ø–µ—Ä–∞—Ü–∏–∏**  \n"
            f"–°—Ç–∞—Ç—É—Å: {'‚úÖ –ó–∞–ø–æ–ª–Ω–µ–Ω–æ' if t6_filled else '‚ùå –ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ'}"
        )
    with col_t6_2:
        create_big_button(
            "–ü–µ—Ä–µ–π—Ç–∏",
            on_click=change_menu_item,
            kwargs={"item": "show_t6_slice"},
            icon="üìù",
            key="t6_btn",
        )

    col_t7_1, col_t7_2 = st.columns([2, 1])
    with col_t7_1:
        st.markdown(
            f"**–°—Ä–µ–∑ t7 - –ø–æ—Å–ª–µ –¥–µ—Å—É—Ñ—Ñ–ª—è—Ü–∏–∏ –≥–∞–∑–∞ –∏–∑ –±—Ä—é—à–Ω–æ–π –ø–æ–ª–æ—Å—Ç–∏**  \n"
            f"–°—Ç–∞—Ç—É—Å: {'‚úÖ –ó–∞–ø–æ–ª–Ω–µ–Ω–æ' if t7_filled else '‚ùå –ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ'}"
        )
    with col_t7_2:
        create_big_button(
            "–ü–µ—Ä–µ–π—Ç–∏",
            on_click=change_menu_item,
            kwargs={"item": "show_t7_slice"},
            icon="üìù",
            key="t7_btn",
        )

    col_t8_1, col_t8_2 = st.columns([2, 1])
    with col_t8_1:
        st.markdown(
            f"**–°—Ä–µ–∑ t8 - —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ —ç–∫—Å—Ç—É–±–∞—Ü–∏–∏ —Ç—Ä–∞—Ö–µ–∏**  \n"
            f"–°—Ç–∞—Ç—É—Å: {'‚úÖ –ó–∞–ø–æ–ª–Ω–µ–Ω–æ' if t8_filled else '‚ùå –ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ'}"
        )
    with col_t8_2:
        create_big_button(
            "–ü–µ—Ä–µ–π—Ç–∏",
            on_click=change_menu_item,
            kwargs={"item": "show_t8_slice"},
            icon="üìù",
            key="t8_btn",
        )

    _back()


def show_postoperative():
    person = st.session_state["current_patient_info"]
    st.title(f"üè• –ü–æ—Å–ª–µ–æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –ø–∞—Ü–∏–µ–Ω—Ç–∞ {person.fio}")
    scales_status = getattr(person, "scales", None)
    slices_status = getattr(person, "slices", None)
    t9_filled = bool(getattr(slices_status, "t9_filled", False)) if slices_status else False
    t10_filled = bool(getattr(slices_status, "t10_filled", False)) if slices_status else False
    t11_filled = bool(getattr(slices_status, "t11_filled", False)) if slices_status else False
    t12_filled = bool(getattr(slices_status, "t12_filled", False)) if slices_status else False

    col1, col2 = st.columns([2, 1])
    with col1:
        st.markdown(
            f"**–°—Ä–µ–∑ t9 - —á–µ—Ä–µ–∑ —á–∞—Å –ø–æ—Å–ª–µ –ø–µ—Ä–µ–≤–æ–¥–∞ –≤ –ê–†–û**  \n"
            f"–°—Ç–∞—Ç—É—Å: {'‚úÖ –ó–∞–ø–æ–ª–Ω–µ–Ω–æ' if t9_filled else '‚ùå –ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ'}"
        )
    with col2:
        create_big_button(
            "–ü–µ—Ä–µ–π—Ç–∏",
            on_click=change_menu_item,
            kwargs={"item": "show_t9_slice"},
            icon="üìù",
            key="t9_btn",
        )

    col3, col4 = st.columns([2, 1])
    with col3:
        st.markdown(
            f"**–°—Ä–µ–∑ t10 - –∫–æ–Ω–µ—Ü 1-—Ö —Å—É—Ç–æ–∫ –ø–æ—Å–ª–µ –æ–ø–µ—Ä–∞—Ü–∏–∏**  \n"
            f"–°—Ç–∞—Ç—É—Å: {'‚úÖ –ó–∞–ø–æ–ª–Ω–µ–Ω–æ' if t10_filled else '‚ùå –ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ'}"
        )
    with col4:
        create_big_button(
            "–ü–µ—Ä–µ–π—Ç–∏",
            on_click=change_menu_item,
            kwargs={"item": "show_t10_slice"},
            icon="üìù",
            key="t10_btn",
        )

    mmse_t10_filled = bool(getattr(scales_status, "mmse_t10_filled", False)) if scales_status else False
    mmse_t10_score = None
    if mmse_t10_filled and scales_status:
        for r in getattr(scales_status, "mmse_results", []) or []:
            if getattr(r, "timepoint", None) == 10:
                mmse_t10_score = getattr(r, "total_score", None)
                break
    col_mm1, col_mm2 = st.columns([2, 1])
    with col_mm1:
        status = (
            f"‚úÖ –ó–∞–ø–æ–ª–Ω–µ–Ω–æ ¬∑ –ë–∞–ª–ª—ã: **{mmse_t10_score}**" if mmse_t10_score is not None else (
                "‚úÖ –ó–∞–ø–æ–ª–Ω–µ–Ω–æ" if mmse_t10_filled else "‚ùå –ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ"
            )
        )
        st.markdown(f"**–®–∫–∞–ª–∞ MMSE (t10) ‚Äî –∫–æ–≥–Ω–∏—Ç–∏–≤–Ω—ã–π —Å—Ç–∞—Ç—É—Å**  \n–°—Ç–∞—Ç—É—Å: {status}")
    with col_mm2:
        create_big_button(
            "–ü–µ—Ä–µ–π—Ç–∏",
            on_click=change_menu_item,
            kwargs={"item": "show_mmse_t10"},
            icon="üìä",
            key="mmse_t10_btn",
        )
    col5, col6 = st.columns([2, 1])
    with col5:
        st.markdown(
            f"**–°—Ä–µ–∑ t11 - –∫–æ–Ω–µ—Ü 2-—Ö —Å—É—Ç–æ–∫ –ø–æ—Å–ª–µ –æ–ø–µ—Ä–∞—Ü–∏–∏**  \n"
            f"–°—Ç–∞—Ç—É—Å: {'‚úÖ –ó–∞–ø–æ–ª–Ω–µ–Ω–æ' if t11_filled else '‚ùå –ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ'}"
        )
    with col6:
        create_big_button(
            "–ü–µ—Ä–µ–π—Ç–∏",
            on_click=change_menu_item,
            kwargs={"item": "show_t11_slice"},
            icon="üìù",
            key="t11_btn",
        )

    col7, col8 = st.columns([2, 1])
    with col7:
        st.markdown(
            f"**–°—Ä–µ–∑ t12 - –∫–æ–Ω–µ—Ü 5-—Ö —Å—É—Ç–æ–∫ –ø–æ—Å–ª–µ –æ–ø–µ—Ä–∞—Ü–∏–∏**  \n"
            f"–°—Ç–∞—Ç—É—Å: {'‚úÖ –ó–∞–ø–æ–ª–Ω–µ–Ω–æ' if t12_filled else '‚ùå –ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ'}"
        )
    with col8:
        create_big_button(
            "–ü–µ—Ä–µ–π—Ç–∏",
            on_click=change_menu_item,
            kwargs={"item": "show_t12_slice"},
            icon="üìù",
            key="t12_btn",
        )

    las_filled = bool(getattr(scales_status, 'las_vegas_filled', False)) if scales_status else False
    col9, col10 = st.columns([2, 1])
    with col9:
        st.markdown(
            f"**–®–∫–∞–ª–∞ LAS VEGAS ‚Äî –æ—Ü–µ–Ω–∫–∞ –ø–æ—Å–ª–µ–æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ä–∏—Å–∫–∞**  \n"
            f"–°—Ç–∞—Ç—É—Å: {'‚úÖ –ó–∞–ø–æ–ª–Ω–µ–Ω–æ' if las_filled else '‚ùå –ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ'}"
        )
    with col10:
        create_big_button(
            '–ü–µ—Ä–µ–π—Ç–∏',
            on_click=change_menu_item,
            kwargs={'item': 'show_las_vegas_scale'},
            icon='üßÆ',
            key='las_vegas_btn',
        )


    _back()


def show_operation_point():
    """Placeholder page for operation point."""
    st.title("‚öôÔ∏è –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –ø—É–Ω–∫—Ç")
    st.info("–†–∞–∑–¥–µ–ª –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
    _back()
