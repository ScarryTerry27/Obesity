import streamlit as st
from database.schemas.soba import SobaCreate
from database.functions import (
    get_soba, upsert_soba, get_person, update_person_fields,
    sb_get_result,   # üëà –¥–æ–±–∞–≤–∏–ª–∏ –∏–º–ø–æ—Ä—Ç
)
from frontend.components import create_big_button
from frontend.utils import change_menu_item


def _risk_label(risk: int | None) -> str:
    if risk is None:
        return "‚Äî"
    return ["–ù–∏–∑–∫–∏–π", "–ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π", "–í—ã—Å–æ–∫–∏–π"][risk]


def show_soba_scale():
    person = st.session_state.get("current_patient_info")
    if not person:
        st.error("–ü–∞—Ü–∏–µ–Ω—Ç –Ω–µ –≤—ã–±—Ä–∞–Ω.")
        return

    st.subheader("SOBA ‚Äî —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø—Ä–∏ –æ–∂–∏—Ä–µ–Ω–∏–∏)")

    # 0) –¢—Ä–µ–±–æ–≤–∞–Ω–∏–µ: —Å–Ω–∞—á–∞–ª–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–∞—Å—Å—á–∏—Ç–∞–Ω STOP-BANG
    sb = sb_get_result(person.id)
    if not sb:
        st.warning(
            "–°–Ω–∞—á–∞–ª–∞ —Ä–∞—Å—Å—á–∏—Ç–∞–π—Ç–µ —à–∫–∞–ª—É **STOP-BANG** ‚Äî –æ–Ω–∞ –Ω—É–∂–Ω–∞ –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ SOBA "
            "(–æ—Ü–µ–Ω–∫–∞ —Ä–∏—Å–∫–∞ –°–û–ê–° –∏ –ø—Ä–∏–Ω—è—Ç–∏–µ —Ä–µ—à–µ–Ω–∏–π)."
        )
        create_big_button(
            "–ü–µ—Ä–µ–π—Ç–∏ –∫ STOP-BANG",
            on_click=change_menu_item,
            kwargs={"item": "show_stopbang_scale"},
            key="go_stopbang_btn",
            icon="üßÆ",
        )
        create_big_button("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", on_click=change_menu_item, kwargs={"item": "preoperative_exam"}, key="back_btn")
        return

    # --- –¢–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –∞–Ω—Ç—Ä–æ–ø–æ–º–µ—Ç—Ä–∏–∏ –∏–∑ –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞ ---
    cur_height = int(person.height or 170)   # —Å–º
    cur_weight = int(person.weight or 90)    # –∫–≥

    stored = get_soba(person.id)

    with st.form("soba_form"):
        st.markdown("### –ê–Ω—Ç—Ä–æ–ø–æ–º–µ—Ç—Ä–∏—è")
        cb, cc = st.columns(2)
        with cb:
            new_height = st.number_input("–†–æ—Å—Ç (—Å–º)", min_value=80, max_value=250, value=cur_height, step=1)
        with cc:
            new_weight = st.number_input("–í–µ—Å (–∫–≥)", min_value=20, max_value=400, value=cur_weight, step=1)

        try:
            bmi = new_weight / ((new_height / 100) ** 2)
            st.caption(f"–ò–ú–¢: **{bmi:.1f} –∫–≥/–º¬≤**")
        except Exception:
            st.caption("–ò–ú–¢: ‚Äî")

        st.markdown("### ¬´–ö—Ä–∞—Å–Ω—ã–µ —Ñ–ª–∞–≥–∏¬ª SOBA")
        c1, c2 = st.columns(2)
        with c1:
            poor_functional_status = st.checkbox(
                "–ü–ª–æ—Ö–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ",
                value=bool(getattr(stored, "poor_functional_status", False)),
            )
            ekg_changes = st.checkbox(
                "–ò–∑–º–µ–Ω–µ–Ω–∏—è –≠–ö–ì",
                value=bool(getattr(stored, "ekg_changes", False)),
            )
            uncontrolled_htn_ihd = st.checkbox(
                "–ù–µ–∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º–∞—è –ê–ì/–ò–ë–°",
                value=bool(getattr(stored, "uncontrolled_htn_ihd", False)),
            )
        with c2:
            spo2_room_air_lt_94 = st.checkbox(
                "SpO‚ÇÇ < 94% (–Ω–∞ –≤–æ–∑–¥—É—Ö–µ)",
                value=bool(getattr(stored, "spo2_room_air_lt_94", False)),
            )
            hypercapnia_co2_gt_28 = st.checkbox(
                "–ì–∏–ø–µ—Ä–∫–∞–ø–Ω–∏—è (PaCO‚ÇÇ > 28)",
                value=bool(getattr(stored, "hypercapnia_co2_gt_28", False)),
            )
            vte_history = st.checkbox(
                "–¢–ì–í/–¢–≠–õ–ê –≤ –∞–Ω–∞–º–Ω–µ–∑–µ",
                value=bool(getattr(stored, "vte_history", False)),
            )

        submitted = st.form_submit_button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å", width='stretch')

    if submitted:
        # 1) –æ–±–Ω–æ–≤–∏–º –∫–∞—Ä—Ç–æ—á–∫—É –ø–∞—Ü–∏–µ–Ω—Ç–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö
        changed = {}
        if new_height != cur_height:
            changed["height"] = int(new_height)
        if new_weight != cur_weight:
            changed["weight"] = int(new_weight)
        if changed:
            update_person_fields(person.id, **changed)

        # 2) —Å–æ—Ö—Ä–∞–Ω–∏–º SOBA
        payload = SobaCreate(
            poor_functional_status=poor_functional_status,
            ekg_changes=ekg_changes,
            uncontrolled_htn_ihd=uncontrolled_htn_ihd,
            spo2_room_air_lt_94=spo2_room_air_lt_94,
            hypercapnia_co2_gt_28=hypercapnia_co2_gt_28,
            vte_history=vte_history,
        )
        saved = upsert_soba(person.id, payload)

        # —Å—Ç–æ–ø-–±–∞–Ω–≥ –∏–∑ –∫—ç—à–∞ SOBA (—Å–µ—Ä–≤–∏—Å –µ–≥–æ –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç)
        risk_label = _risk_label(getattr(saved, "stopbang_risk_cached", None))
        score = getattr(saved, "stopbang_score_cached", "‚Äî")
        st.success(f"SOBA —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞. STOP-BANG: {score} –±–∞–ª–ª–æ–≤ ¬∑ —Ä–∏—Å–∫: **{risk_label}**")

        # –æ–±–Ω–æ–≤–∏–º –ø–∞—Ü–∏–µ–Ω—Ç–∞ –≤ —Å–µ—Å—Å–∏–∏
        st.session_state["current_patient_info"] = get_person(person.id)

    create_big_button("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", on_click=change_menu_item, kwargs={"item": "preoperative_exam"}, key="back_btn")