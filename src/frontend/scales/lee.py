import streamlit as st
from database.functions import rcri_get_result, rcri_upsert_result, get_person
from database.schemas.lee import LeeRcriInput
from frontend.components import create_big_button
from frontend.utils import change_menu_item


def _fmt_pct(x: float | int | None) -> str:
    if x is None:
        return "‚Äî"
    return f"{float(x):g}%"


def show_lee_scale():
    person = st.session_state.get("current_patient_info")
    if not person:
        st.error("–ü–∞—Ü–∏–µ–Ω—Ç –Ω–µ –≤—ã–±—Ä–∞–Ω.")
        return

    st.subheader("–ò–Ω–¥–µ–∫—Å Lee (RCRI) ‚Äî —Ä–∏—Å–∫ —Å–µ—Ä–¥–µ—á–Ω–æ-—Å–æ—Å—É–¥–∏—Å—Ç—ã—Ö –æ—Å–ª–æ–∂–Ω–µ–Ω–∏–π")

    # –ø–æ–¥—Ç—è–Ω–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–µ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    stored = rcri_get_result(person.id)

    if stored:
        st.info(
            f"–¢–µ–∫—É—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: **{stored.total_score}** –±–∞–ª–ª(–æ–≤) ¬∑ "
            f"—Ä–∏—Å–∫ –æ—Å–ª–æ–∂–Ω–µ–Ω–∏–π: **{_fmt_pct(stored.risk_percent)}**"
        )

    with st.form("lee_rcri_form"):
        c1, c2 = st.columns(2)
        with c1:
            high_risk_surgery = st.checkbox(
                "–û–ø–µ—Ä–∞—Ü–∏—è –≤—ã—Å–æ–∫–æ–≥–æ —Ä–∏—Å–∫–∞",
                value=bool(getattr(stored, "high_risk_surgery", False)),
            )
            ischemic_heart_disease = st.checkbox(
                "–ò—à–µ–º–∏—á–µ—Å–∫–∞—è –±–æ–ª–µ–∑–Ω—å —Å–µ—Ä–¥—Ü–∞",
                value=bool(getattr(stored, "ischemic_heart_disease", False)),
            )
            congestive_heart_failure = st.checkbox(
                "–•—Ä–æ–Ω–∏—á–µ—Å–∫–∞—è —Å–µ—Ä–¥–µ—á–Ω–∞—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ—Å—Ç—å",
                value=bool(getattr(stored, "congestive_heart_failure", False)),
            )
        with c2:
            cerebrovascular_disease = st.checkbox(
                "–û–ù–ú–ö / –¢–ò–ê –≤ –∞–Ω–∞–º–Ω–µ–∑–µ",
                value=bool(getattr(stored, "cerebrovascular_disease", False)),
            )
            diabetes_on_insulin = st.checkbox(
                "–°–∞—Ö–∞—Ä–Ω—ã–π –¥–∏–∞–±–µ—Ç –Ω–∞ –∏–Ω—Å—É–ª–∏–Ω–µ",
                value=bool(getattr(stored, "diabetes_on_insulin", False)),
            )
            creatinine_gt_180_umol_l = st.checkbox(
                "–ö—Ä–µ–∞—Ç–∏–Ω–∏–Ω > 180 –º–∫–º–æ–ª—å/–ª",
                value=bool(getattr(stored, "creatinine_gt_180_umol_l", False)),
            )

        submitted = st.form_submit_button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å", width='stretch')

    if submitted:
        payload = LeeRcriInput(
            high_risk_surgery=high_risk_surgery,
            ischemic_heart_disease=ischemic_heart_disease,
            congestive_heart_failure=congestive_heart_failure,
            cerebrovascular_disease=cerebrovascular_disease,
            diabetes_on_insulin=diabetes_on_insulin,
            creatinine_gt_180_umol_l=creatinine_gt_180_umol_l,
        )
        saved = rcri_upsert_result(person.id, payload)

        st.success(
            f"–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ. –ò—Ç–æ–≥: **{saved.total_score}** –±–∞–ª–ª(–æ–≤) ¬∑ "
            f"—Ä–∏—Å–∫ –æ—Å–ª–æ–∂–Ω–µ–Ω–∏–π: **{_fmt_pct(saved.risk_percent)}**"
        )
        st.session_state["current_patient_info"] = get_person(person.id)

    create_big_button("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", on_click=change_menu_item,
                      kwargs={"item": "preoperative_exam"}, key="back_btn_lee")
