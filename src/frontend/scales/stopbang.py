import streamlit as st

from database.functions import sb_get_result, sb_upsert_result, get_person
from database.schemas.stopbang import StopBangInput
from frontend.components import create_big_button
from frontend.utils import change_menu_item


def _sb_risk_label(level: int | None) -> str:
    if level is None:
        return ""
    return ["–Ω–∏–∑–∫–∏–π", "–ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π", "–≤—ã—Å–æ–∫–∏–π"][max(0, min(2, int(level)))]


def _auto_defaults_from_person(person) -> tuple[int, float, float]:
    """–ë–µ—Ä—ë–º –≤–æ–∑—Ä–∞—Å—Ç, —Å—á–∏—Ç–∞–µ–º BMI –∏–∑ –≤–µ—Å–∞/—Ä–æ—Å—Ç–∞, –æ–∫—Ä—É–∂–Ω–æ—Å—Ç—å —à–µ–∏ –æ—Å—Ç–∞–≤–ª—è–µ–º –ø—É—Å—Ç–æ–π."""
    # –æ–∂–∏–¥–∞–µ–º, —á—Ç–æ person.weight (–∫–≥), person.height (—Å–º), person.age (–ª–µ—Ç)
    try:
        age = int(person.age or 50)
    except Exception:
        age = 50
    try:
        w = float(person.weight or 100.0)
        h_cm = float(person.height or 170.0)
        h_m = max(h_cm / 100.0, 0.5)
        bmi = round(w / (h_m * h_m), 1)
    except Exception:
        bmi = 35.0
    # –æ–∫—Ä—É–∂–Ω–æ—Å—Ç—å —à–µ–∏ ‚Äî –Ω–µ —É–≥–∞–¥–∞–µ–º; –ø—É—Å—Ç—å 40.0 –∫–∞–∫ —Å—Ç–∞—Ä—Ç–æ–≤–∞—è —Ç–æ—á–∫–∞
    neck = 40.0
    return age, bmi, neck


def show_stopbang_scale():
    """–≠–∫—Ä–∞–Ω –≤–≤–æ–¥–∞ STOP-BANG. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–µ—Ä–≤–∏—Å–Ω—ã–π —Å–ª–æ–π, –±–µ–∑ –ø—Ä—è–º–æ–π —Ä–∞–±–æ—Ç—ã —Å —Å–µ—Å—Å–∏–µ–π."""
    person = st.session_state.get("current_patient_info")
    if not person:
        st.error("–ü–∞—Ü–∏–µ–Ω—Ç –Ω–µ –≤—ã–±—Ä–∞–Ω.")
        return

    st.subheader("–®–∫–∞–ª–∞ STOP-BANG ‚Äî —Å–∫—Ä–∏–Ω–∏–Ω–≥ –°–û–ê–°")

    # 1) –ü–æ–¥—Ç—è–Ω—É—Ç—å —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –µ—Å–ª–∏ –µ—Å—Ç—å
    stored = sb_get_result(person.id)

    # 2) –î–µ—Ñ–æ–ª—Ç—ã (–µ—Å–ª–∏ –∑–∞–ø–∏—Å–∏ –Ω–µ—Ç) ‚Äî –∏–∑ –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞
    age_default, bmi_default, neck_default = _auto_defaults_from_person(person)

    # –°–æ–±–∏—Ä–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è —Ñ–æ—Ä–º—ã: –µ—Å–ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ ‚Äî –±–µ—Ä—ë–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ; –∏–Ω–∞—á–µ –¥–µ—Ñ–æ–ª—Ç—ã
    s_snoring = bool(getattr(stored, "s_snoring", False))
    t_tired = bool(getattr(stored, "t_tired_daytime", False))
    o_observed = bool(getattr(stored, "o_observed_apnea", False))
    p_htn = bool(getattr(stored, "p_hypertension", False))
    g_male = bool(getattr(stored, "g_male", (str(getattr(person, "gender", "")).lower() == "m")))
    age_years = int(getattr(stored, "age_years", age_default))
    bmi_value = float(getattr(stored, "bmi_value", bmi_default))
    neck_circ_cm = float(getattr(stored, "neck_circ_cm", neck_default))

    # –ï—Å–ª–∏ –∑–∞–ø–∏—Å—å –µ—Å—Ç—å ‚Äî –ø–æ–∫–∞–∂–µ–º —Ç–µ–∫—É—â–∏–π –∏—Ç–æ–≥
    if stored:
        st.info(f"–¢–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ: –±–∞–ª–ª—ã **{stored.total_score}** ¬∑ —Ä–∏—Å–∫ **{_sb_risk_label(stored.risk_level)}**")

    with st.form("stopbang_form"):
        c1, c2 = st.columns(2)

        with c1:
            s_snoring = st.checkbox("–ì—Ä–æ–º–∫–∏–π —Ö—Ä–∞–ø (S ‚Äî Snoring)", value=s_snoring)
            t_tired = st.checkbox("–î–Ω–µ–≤–Ω–∞—è —Å–æ–Ω–ª–∏–≤–æ—Å—Ç—å/—É—Å—Ç–∞–ª–æ—Å—Ç—å (T ‚Äî Tired)", value=t_tired)
            o_observed = st.checkbox("–ù–∞–±–ª—é–¥–∞–ª–∏—Å—å –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥—ã—Ö–∞–Ω–∏—è –≤–æ —Å–Ω–µ (O ‚Äî Observed)", value=o_observed)
            p_htn = st.checkbox("–ê—Ä—Ç–µ—Ä–∏–∞–ª—å–Ω–∞—è –≥–∏–ø–µ—Ä—Ç–µ–Ω–∑–∏—è (P ‚Äî Pressure)", value=p_htn)

        with c2:
            g_male = st.checkbox("–ú—É–∂—Å–∫–æ–π –ø–æ–ª (G ‚Äî Gender)", value=g_male)
            age_years = st.number_input("–í–æ–∑—Ä–∞—Å—Ç (–ª–µ—Ç)", min_value=0, max_value=130, value=age_years, step=1)
            bmi_value = st.number_input("–ò–Ω–¥–µ–∫—Å –º–∞—Å—Å—ã —Ç–µ–ª–∞ (–∫–≥/–º¬≤)", min_value=5.0, max_value=120.0, value=bmi_value,
                                        step=0.1)
            neck_circ_cm = st.number_input("–û–∫—Ä—É–∂–Ω–æ—Å—Ç—å —à–µ–∏ (—Å–º)", min_value=10.0, max_value=80.0, value=neck_circ_cm,
                                           step=0.5)

        submitted = st.form_submit_button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å", use_container_width=True)

    if submitted:
        data = StopBangInput(
            s_snoring=s_snoring,
            t_tired_daytime=t_tired,
            o_observed_apnea=o_observed,
            p_hypertension=p_htn,
            g_male=g_male,
            age_years=age_years,
            bmi_value=bmi_value,
            neck_circ_cm=neck_circ_cm,
        )
        saved = sb_upsert_result(person.id, data)
        st.success(f"–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ. –ë–∞–ª–ª—ã: **{saved.total_score}** ¬∑ —Ä–∏—Å–∫: **{_sb_risk_label(saved.risk_level)}**")
        st.session_state["current_patient_info"] = get_person(person.id)
    create_big_button("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", on_click=change_menu_item, kwargs={"item": "preoperative_exam"}, key="back_btn")
