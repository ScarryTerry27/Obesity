import streamlit as st

from database.functions import (
    caprini_get_result,
    caprini_upsert_result,
    get_person,
    update_person_fields,  # üëà –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ Person
)
from database.schemas.caprini import CapriniInput
from frontend.components import create_big_button
from frontend.utils import change_menu_item


def _risk_label(level: int | None) -> str:
    # 0=–æ—á. –Ω–∏–∑–∫–∏–π, 1=–Ω–∏–∑–∫–∏–π, 2=—É–º–µ—Ä–µ–Ω–Ω—ã–π, 3=–≤—ã—Å–æ–∫–∏–π
    if level is None:
        return "‚Äî"
    return ["–û—á–µ–Ω—å –Ω–∏–∑–∫–∏–π", "–ù–∏–∑–∫–∏–π", "–£–º–µ—Ä–µ–Ω–Ω—ã–π", "–í—ã—Å–æ–∫–∏–π"][max(0, min(3, int(level)))]


def _bmi(weight_kg: float | int | None, height_cm: float | int | None) -> float | None:
    try:
        if not weight_kg or not height_cm:
            return None
        h_m = float(height_cm) / 100.0
        if h_m <= 0:
            return None
        return round(float(weight_kg) / (h_m * h_m), 1)
    except Exception:
        return None


def _caprini_age_bucket(age: int) -> tuple[str, int]:
    # –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç (label, points)
    if age <= 40:
        return "‚â§40 –ª–µ—Ç", 0
    if 41 <= age <= 60:
        return "41‚Äì60 –ª–µ—Ç", 1
    if 61 <= age <= 74:
        return "61‚Äì74 –ª–µ—Ç", 2
    return "‚â•75 –ª–µ—Ç", 3


def show_caprini_scale():
    person = st.session_state.get("current_patient_info")
    if not person:
        st.error("–ü–∞—Ü–∏–µ–Ω—Ç –Ω–µ –≤—ã–±—Ä–∞–Ω.")
        return

    st.subheader("–®–∫–∞–ª–∞ Caprini ‚Äî —Ä–∏—Å–∫ –í–¢–≠–û")

    stored = caprini_get_result(person.id)

    # –¥–µ—Ñ–æ–ª—Ç—ã –∏–∑ –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞
    def_age = int(getattr(person, "age", 40) or 40)
    def_height = int(getattr(person, "height", 170) or 170)
    def_weight = int(getattr(person, "weight", 90) or 90)

    # –µ—Å–ª–∏ —É–∂–µ —Å—á–∏—Ç–∞–ª–∏ ‚Äî –≤–æ–∑—å–º—ë–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ ¬´—Å—ã—Ä—ã–µ¬ª (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)
    age_years = int(getattr(stored, "age_years", def_age) or def_age)
    height_cm = float(getattr(stored, "height_cm", def_height) or def_height)
    weight_kg = float(getattr(stored, "weight_kg", def_weight) or def_weight)

    # –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π –∏—Ç–æ–≥, –µ—Å–ª–∏ —É–∂–µ –µ—Å—Ç—å
    if stored:
        st.info(f"–¢–µ–∫—É—â–∏–π –∏—Ç–æ–≥: **{stored.total_score}** –±–∞–ª–ª–æ–≤ ¬∑ —Ä–∏—Å–∫: **{_risk_label(stored.risk_level)}**")

    with st.form("caprini_form"):
        st.markdown("### –ê–Ω—Ç—Ä–æ–ø–æ–º–µ—Ç—Ä–∏—è")
        c0, c1, c2, c3 = st.columns([1, 1, 1, 1])
        with c1:
            age_years = st.number_input("–í–æ–∑—Ä–∞—Å—Ç (–ª–µ—Ç)", min_value=0, max_value=130, value=age_years, step=1)
        with c2:
            height_cm = st.number_input("–†–æ—Å—Ç (—Å–º)", min_value=80.0, max_value=250.0, value=float(height_cm), step=1.0)
        with c3:
            weight_kg = st.number_input("–í–µ—Å (–∫–≥)", min_value=20.0, max_value=400.0, value=float(weight_kg), step=1.0)

        bmi = _bmi(weight_kg, height_cm)
        st.caption(f"–ò–ú–¢: **{bmi:.1f} –∫–≥/–º¬≤**" if bmi is not None else "–ò–ú–¢: ‚Äî")

        # === –í–æ–∑—Ä–∞—Å—Ç / –ò–ú–¢ ===
        st.markdown("### –í–æ–∑—Ä–∞—Å—Ç / –ò–ú–¢")

        # –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π –≤—ã–±–æ—Ä –≤–æ–∑—Ä–∞—Å—Ç–∞:
        # 1) –µ—Å–ª–∏ –≤ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –æ—Ç–º–µ—á–µ–Ω—ã –≤–æ–∑—Ä–∞—Å—Ç–Ω—ã–µ —Ñ–ª–∞–≥–∏ ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Ö
        # 2) –∏–Ω–∞—á–µ ‚Äî –≤—ã—á–∏—Å–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ —Ç–µ–∫—É—â–µ–º—É age_years
        age_radio_options = ["‚â§40 –ª–µ—Ç (+0)", "41‚Äì60 –ª–µ—Ç (+1)", "61‚Äì74 –ª–µ—Ç (+2)", "‚â•75 –ª–µ—Ç (+3)"]

        stored_age_flags = {
            "41‚Äì60 –ª–µ—Ç (+1)": bool(getattr(stored, "age_41_60", False)),
            "61‚Äì74 –ª–µ—Ç (+2)": bool(getattr(stored, "age_61_74", False)),
            "‚â•75 –ª–µ—Ç (+3)": bool(getattr(stored, "age_ge_75", False)),
        }
        if any(stored_age_flags.values()):
            if stored_age_flags["41‚Äì60 –ª–µ—Ç (+1)"]:
                default_age_label = "41‚Äì60 –ª–µ—Ç (+1)"
            elif stored_age_flags["61‚Äì74 –ª–µ—Ç (+2)"]:
                default_age_label = "61‚Äì74 –ª–µ—Ç (+2)"
            else:
                default_age_label = "‚â•75 –ª–µ—Ç (+3)"
        else:
            # –ø–æ —Ç–µ–∫—É—â–µ–º—É –≤–æ–∑—Ä–∞—Å—Ç—É
            _label, _ = _caprini_age_bucket(int(age_years or 0))
            if _label == "‚â§40 –ª–µ—Ç":
                default_age_label = "‚â§40 –ª–µ—Ç (+0)"
            elif _label == "41‚Äì60 –ª–µ—Ç":
                default_age_label = "41‚Äì60 –ª–µ—Ç (+1)"
            elif _label == "61‚Äì74 –ª–µ—Ç":
                default_age_label = "61‚Äì74 –ª–µ—Ç (+2)"
            else:
                default_age_label = "‚â•75 –ª–µ—Ç (+3)"

        c_age, c_bmi = st.columns([2, 1])

        with c_age:
            age_choice = st.radio(
                "–í–æ–∑—Ä–∞—Å—Ç",
                options=age_radio_options,
                index=age_radio_options.index(default_age_label),
                horizontal=True,
            )
            # —Ä–∞–∑–ª–æ–∂–∏–º radio –≤ –≤–∑–∞–∏–º–Ω–æ-–∏—Å–∫–ª—é—á–∞—é—â–∏–µ —Ñ–ª–∞–≥–∏
            age_41_60 = (age_choice == "41‚Äì60 –ª–µ—Ç (+1)")
            age_61_74 = (age_choice == "61‚Äì74 –ª–µ—Ç (+2)")
            age_ge_75 = (age_choice == "‚â•75 –ª–µ—Ç (+3)")

        with c_bmi:
            bmi_gt_25 = st.checkbox(
                "–ò–ú–¢ > 25 (+1)",
                value=bool(getattr(stored, "bmi_gt_25", (bmi or 0) > 25)),
            )
            st.caption("–û—Ç–º–µ—Ç—å—Ç–µ, –µ—Å–ª–∏ –ò–ú–¢ > 25 –∫–≥/–º¬≤")

        st.markdown("### –§–∞–∫—Ç–æ—Ä—ã (+1)")
        c1, c2 = st.columns(2)
        with c1:
            leg_swelling_now = st.checkbox("–û—Ç–µ–∫–∏ –Ω–∏–∂–Ω–∏—Ö –∫–æ–Ω–µ—á–Ω–æ—Å—Ç–µ–π",
                                           value=bool(getattr(stored, "leg_swelling_now", False)))
            varicose_veins = st.checkbox("–í–∞—Ä–∏–∫–æ–∑–Ω—ã–µ –≤–µ–Ω—ã", value=bool(getattr(stored, "varicose_veins", False)))
            sepsis_lt_1m = st.checkbox("–°–µ–ø—Å–∏—Å (<1 –º–µ—Å)", value=bool(getattr(stored, "sepsis_lt_1m", False)))
            severe_lung_disease_lt_1m = st.checkbox("–¢—è–∂—ë–ª–æ–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–µ –ª—ë–≥–∫–∏—Ö (<1 –º–µ—Å)",
                                                    value=bool(getattr(stored, "severe_lung_disease_lt_1m", False)))
            ocp_or_hrt = st.checkbox("–û–ö / –ì–ó–¢", value=bool(getattr(stored, "ocp_or_hrt", False)))
            pregnant_or_postpartum_lt_1m = st.checkbox("–ë–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å / –ø–æ—Å–ª–µ—Ä–æ–¥–æ–≤–æ–π <1 –º–µ—Å",
                                                       value=bool(
                                                           getattr(stored, "pregnant_or_postpartum_lt_1m", False)))
            adverse_pregnancy_history = st.checkbox("–ù–µ–±–ª–∞–≥–æ–ø—Ä. –∞–∫—É—à–µ—Ä—Å–∫–∏–π –∞–Ω–∞–º–Ω–µ–∑",
                                                    value=bool(getattr(stored, "adverse_pregnancy_history", False)))
        with c2:
            acute_mi = st.checkbox("–û—Å—Ç—Ä—ã–π –ò–ú", value=bool(getattr(stored, "acute_mi", False)))
            chf_now_or_lt_1m = st.checkbox("–•–°–ù (—Å–µ–π—á–∞—Å –∏–ª–∏ <1 –º–µ—Å)",
                                           value=bool(getattr(stored, "chf_now_or_lt_1m", False)))
            bed_rest = st.checkbox("–ü–æ—Å—Ç–µ–ª—å–Ω—ã–π —Ä–µ–∂–∏–º", value=bool(getattr(stored, "bed_rest", False)))
            ibd_history = st.checkbox("–í–ó–ö –≤ –∞–Ω–∞–º–Ω–µ–∑–µ", value=bool(getattr(stored, "ibd_history", False)))
            copd = st.checkbox("–•–û–ë–õ", value=bool(getattr(stored, "copd", False)))
            minor_surgery = st.checkbox("–ú–∞–ª–æ–µ —Ö–∏—Ä—É—Ä–≥–∏—á–µ—Å–∫–æ–µ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–æ",
                                        value=bool(getattr(stored, "minor_surgery", False)))
            additional_risk_factor = st.checkbox("–î–æ–ø. —Ñ–∞–∫—Ç–æ—Ä —Ä–∏—Å–∫–∞",
                                                 value=bool(getattr(stored, "additional_risk_factor", False)))

        st.markdown("### –§–∞–∫—Ç–æ—Ä—ã (+2)")
        d1, d2 = st.columns(2)
        with d1:
            bed_rest_gt_72h = st.checkbox("–ü–æ—Å—Ç–µ–ª—å–Ω—ã–π —Ä–µ–∂–∏–º >72 —á",
                                          value=bool(getattr(stored, "bed_rest_gt_72h", False)))
            major_surgery_lt_1m = st.checkbox("–ë–æ–ª—å—à–∞—è —Ö–∏—Ä—É—Ä–≥–∏—è <1 –º–µ—Å",
                                              value=bool(getattr(stored, "major_surgery_lt_1m", False)))
            cancer_current_or_past = st.checkbox("–ó–ª–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –Ω–æ–≤–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ",
                                                 value=bool(getattr(stored, "cancer_current_or_past", False)))
            limb_immobilization_lt_1m = st.checkbox("–ò–º–º–æ–±–∏–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏ <1 –º–µ—Å",
                                                    value=bool(getattr(stored, "limb_immobilization_lt_1m", False)))
        with d2:
            central_venous_catheter = st.checkbox("–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –≤–µ–Ω–æ–∑–Ω—ã–π –∫–∞—Ç–µ—Ç–µ—Ä",
                                                  value=bool(getattr(stored, "central_venous_catheter", False)))
            arthroscopic_surgery = st.checkbox("–ê—Ä—Ç—Ä–æ—Å–∫–æ–ø–∏—á–µ—Å–∫–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è",
                                               value=bool(getattr(stored, "arthroscopic_surgery", False)))
            laparoscopy_gt_60m = st.checkbox("–õ–∞–ø–∞—Ä–æ—Å–∫–æ–ø–∏—è >60 –º–∏–Ω",
                                             value=bool(getattr(stored, "laparoscopy_gt_60m", False)))
            major_surgery_gt_45m = st.checkbox("–ë–æ–ª—å—à–∞—è —Ö–∏—Ä—É—Ä–≥–∏—è >45 –º–∏–Ω",
                                               value=bool(getattr(stored, "major_surgery_gt_45m", False)))

        st.markdown("### –§–∞–∫—Ç–æ—Ä—ã (+3)")
        e1, e2 = st.columns(2)
        with e1:
            personal_vte_history = st.checkbox("–õ–∏—á–Ω—ã–π –∞–Ω–∞–º–Ω–µ–∑ –í–¢–≠–û",
                                               value=bool(getattr(stored, "personal_vte_history", False)))
            factor_v_leiden = st.checkbox("–ú—É—Ç–∞—Ü–∏—è —Ñ–∞–∫—Ç–æ—Ä–∞ V (–õ–µ–π–¥–µ–Ω)",
                                          value=bool(getattr(stored, "factor_v_leiden", False)))
            prothrombin_20210a = st.checkbox("–ú—É—Ç–∞—Ü–∏—è –ø—Ä–æ—Ç—Ä–æ–º–±–∏–Ω–∞ 20210A",
                                             value=bool(getattr(stored, "prothrombin_20210a", False)))
            lupus_anticoagulant = st.checkbox("–í–æ–ª—á–∞–Ω–æ—á–Ω—ã–π –∞–Ω—Ç–∏–∫–æ–∞–≥—É–ª—è–Ω—Ç (+)",
                                              value=bool(getattr(stored, "lupus_anticoagulant", False)))
        with e2:
            family_vte_history = st.checkbox("–°–µ–º–µ–π–Ω—ã–π –∞–Ω–∞–º–Ω–µ–∑ –í–¢–≠–û",
                                             value=bool(getattr(stored, "family_vte_history", False)))
            hyperhomocysteinemia = st.checkbox("–ì–∏–ø–µ—Ä–≥–æ–º–æ—Ü–∏—Å—Ç–µ–∏–Ω–µ–º–∏—è",
                                               value=bool(getattr(stored, "hyperhomocysteinemia", False)))
            hit = st.checkbox("–ì–µ–ø–∞—Ä–∏–Ω-–∏–Ω–¥—É—Ü–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ç—Ä–æ–º–±–æ—Ü–∏—Ç–æ–ø–µ–Ω–∏—è", value=bool(getattr(stored, "hit", False)))
            anticardiolipin_antibodies = st.checkbox("–ê–Ω—Ç–∏—Ç–µ–ª–∞ –∫ –∫–∞—Ä–¥–∏–æ–ª–∏–ø–∏–Ω—É (+)",
                                                     value=bool(getattr(stored, "anticardiolipin_antibodies", False)))
        other_thrombophilia = st.checkbox("–î—Ä—É–≥–∞—è —Ç—Ä–æ–º–±–æ—Ñ–∏–ª–∏—è",
                                          value=bool(getattr(stored, "other_thrombophilia", False)))

        st.markdown("### –§–∞–∫—Ç–æ—Ä—ã (+5)")
        f1, f2 = st.columns(2)
        with f1:
            stroke_lt_1m = st.checkbox("–ò–Ω—Å—É–ª—å—Ç <1 –º–µ—Å", value=bool(getattr(stored, "stroke_lt_1m", False)))
            spinal_cord_injury_paralysis_lt_1m = st.checkbox("–ü–æ–≤—Ä–µ–∂–¥–µ–Ω–∏–µ —Å–ø–∏–Ω–Ω–æ–≥–æ –º–æ–∑–≥–∞ —Å –ø–∞—Ä–∞–ª–∏—á–æ–º <1 –º–µ—Å",
                                                             value=bool(
                                                                 getattr(stored, "spinal_cord_injury_paralysis_lt_1m",
                                                                         False)))
        with f2:
            multiple_trauma_lt_1m = st.checkbox("–ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ç—Ä–∞–≤–º—ã <1 –º–µ—Å",
                                                value=bool(getattr(stored, "multiple_trauma_lt_1m", False)))
            major_joint_replacement = st.checkbox("–≠–Ω–¥–æ–ø—Ä–æ—Ç–µ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ –∫—Ä—É–ø–Ω—ã—Ö —Å—É—Å—Ç–∞–≤–æ–≤",
                                                  value=bool(getattr(stored, "major_joint_replacement", False)))
            fracture_pelvis_or_limb = st.checkbox("–ü–µ—Ä–µ–ª–æ–º —Ç–∞–∑–∞/–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏",
                                                  value=bool(getattr(stored, "fracture_pelvis_or_limb", False)))

        submitted = st.form_submit_button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å", width='stretch')

    if submitted:
        # 1) —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å –∫–∞—Ä—Ç–æ—á–∫–æ–π –ø–∞—Ü–∏–µ–Ω—Ç–∞ (Person)
        person_age = int(getattr(person, "age", def_age) or def_age)
        person_height = int(getattr(person, "height", def_height) or def_height)
        person_weight = int(getattr(person, "weight", def_weight) or def_weight)

        changed = {}
        if int(height_cm) != person_height:
            changed["height"] = int(height_cm)
        if int(weight_kg) != person_weight:
            changed["weight"] = int(weight_kg)
        if changed:
            update_person_fields(person.id, **changed)

        # 2) —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å–∞–º Caprini
        payload = CapriniInput(
            # —Å—ã—Ä—ã–µ –¥–ª—è –∞–≤—Ç–æ–ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤–æ–∑—Ä–∞—Å—Ç–∞/–ò–ú–¢
            age_years=int(age_years),
            height_cm=float(height_cm),
            weight_kg=float(weight_kg),

            # —è–≤–Ω—ã–µ —Ñ–ª–∞–≥–∏ (—Ä–∞–¥–∏–æ/—á–µ–∫–±–æ–∫—Å)
            age_41_60=bool(age_41_60),
            age_61_74=bool(age_61_74),
            age_ge_75=bool(age_ge_75),
            bmi_gt_25=bool(bmi_gt_25),

            leg_swelling_now=bool(leg_swelling_now),
            varicose_veins=bool(varicose_veins),
            sepsis_lt_1m=bool(sepsis_lt_1m),
            severe_lung_disease_lt_1m=bool(severe_lung_disease_lt_1m),
            ocp_or_hrt=bool(ocp_or_hrt),
            pregnant_or_postpartum_lt_1m=bool(pregnant_or_postpartum_lt_1m),
            adverse_pregnancy_history=bool(adverse_pregnancy_history),
            acute_mi=bool(acute_mi),
            chf_now_or_lt_1m=bool(chf_now_or_lt_1m),
            bed_rest=bool(bed_rest),
            ibd_history=bool(ibd_history),
            copd=bool(copd),
            minor_surgery=bool(minor_surgery),
            additional_risk_factor=bool(additional_risk_factor),

            bed_rest_gt_72h=bool(bed_rest_gt_72h),
            major_surgery_lt_1m=bool(major_surgery_lt_1m),
            cancer_current_or_past=bool(cancer_current_or_past),
            limb_immobilization_lt_1m=bool(limb_immobilization_lt_1m),
            central_venous_catheter=bool(central_venous_catheter),
            arthroscopic_surgery=bool(arthroscopic_surgery),
            laparoscopy_gt_60m=bool(laparoscopy_gt_60m),
            major_surgery_gt_45m=bool(major_surgery_gt_45m),

            personal_vte_history=bool(personal_vte_history),
            factor_v_leiden=bool(factor_v_leiden),
            prothrombin_20210a=bool(prothrombin_20210a),
            lupus_anticoagulant=bool(lupus_anticoagulant),
            family_vte_history=bool(family_vte_history),
            hyperhomocysteinemia=bool(hyperhomocysteinemia),
            hit=bool(hit),
            anticardiolipin_antibodies=bool(anticardiolipin_antibodies),
            other_thrombophilia=bool(other_thrombophilia),

            stroke_lt_1m=bool(stroke_lt_1m),
            spinal_cord_injury_paralysis_lt_1m=bool(spinal_cord_injury_paralysis_lt_1m),
            multiple_trauma_lt_1m=bool(multiple_trauma_lt_1m),
            major_joint_replacement=bool(major_joint_replacement),
            fracture_pelvis_or_limb=bool(fracture_pelvis_or_limb),
        )

        saved = caprini_upsert_result(person.id, payload)
        st.success(f"–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ. –°—É–º–º–∞: **{saved.total_score}** ¬∑ –£—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞: **{_risk_label(saved.risk_level)}**")

        # –æ–±–Ω–æ–≤–∏–º –∫–∞—Ä—Ç–æ—á–∫—É –ø–∞—Ü–∏–µ–Ω—Ç–∞ –≤ —Å–µ—Å—Å–∏–∏, —á—Ç–æ–±—ã —Å–ø–∏—Å–æ–∫ —à–∫–∞–ª –ø–æ–∫–∞–∑–∞–ª ¬´–ó–∞–ø–æ–ª–Ω–µ–Ω–æ¬ª –∏ –ø–æ–¥—Ç—è–Ω—É–ª –Ω–æ–≤—ã–µ –≤–æ–∑—Ä–∞—Å—Ç/—Ä–æ—Å—Ç/–≤–µ—Å
        st.session_state["current_patient_info"] = get_person(person.id)

    create_big_button("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", on_click=change_menu_item, kwargs={"item": "preoperative_exam"}, key="back_btn")
