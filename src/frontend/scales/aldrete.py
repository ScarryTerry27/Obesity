import streamlit as st

from database.functions import ald_get_result, ald_upsert_result, get_person
from database.schemas.aldrete import AldreteInput
from frontend.components import create_big_button
from frontend.utils import change_menu_item


def show_aldrete_scale():
    person = st.session_state.get("current_patient_info")
    if not person:
        st.error("–ü–∞—Ü–∏–µ–Ω—Ç –Ω–µ –≤—ã–±—Ä–∞–Ω.")
        create_big_button(
            "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
            on_click=change_menu_item,
            kwargs={"item": "calculators"},
            key="back_btn",
        )
        return

    st.subheader("–®–∫–∞–ª–∞ Aldrete ‚Äî –æ—Ü–µ–Ω–∫–∞ –≤—ã—Ö–æ–¥–∞ –∏–∑ –∞–Ω–µ—Å—Ç–µ–∑–∏–∏")

    stored = ald_get_result(person.id)

    activity_opts = {
        "–¥–≤–∏–∂–µ–Ω–∏–µ –≤—Å–µ–º–∏ –∫–æ–Ω–µ—á–Ω–æ—Å—Ç—è–º–∏ –ø–æ –∫–æ–º–∞–Ω–¥–µ": 2,
        "–¥–≤–∏–∂–µ–Ω–∏–µ –¥–≤—É–º—è –∫–æ–Ω–µ—á–Ω–æ—Å—Ç—è–º–∏": 1,
        "–Ω–µ –¥–≤–∏–≥–∞–µ—Ç—Å—è": 0,
    }
    respiration_opts = {
        "–≥–ª—É–±–æ–∫–æ–µ –¥—ã—Ö–∞–Ω–∏–µ –∏ –∫–∞—à–µ–ª—å": 2,
        "–æ–¥—ã—à–∫–∞/–ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–Ω–æ–µ –¥—ã—Ö–∞–Ω–∏–µ": 1,
        "–∞–ø–Ω–æ—ç": 0,
    }
    pressure_opts = {
        "–≤ –ø—Ä–µ–¥–µ–ª–∞—Ö 20% –¥–æ —É—Ä–æ–≤–Ω—è –ø–µ—Ä–µ–¥ –∞–Ω–µ—Å—Ç–µ–∑–∏–µ–π": 2,
        "20‚Äì50% –æ—Ç –∏—Å—Ö–æ–¥–Ω–æ–≥–æ": 1,
        ">50% –æ—Ç –∏—Å—Ö–æ–¥–Ω–æ–≥–æ": 0,
    }
    consciousness_opts = {
        "—è—Å–Ω–æ–µ": 2,
        "–ø—Ä–æ–±—É–∂–¥–∞–µ—Ç—Å—è –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏": 1,
        "–Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç": 0,
    }
    spo2_opts = {
        ">92% –Ω–∞ –≤–æ–∑–¥—É—Ö–µ": 2,
        ">90% —Å –∫–∏—Å–ª–æ—Ä–æ–¥–æ–º": 1,
        "<90% —Å –∫–∏—Å–ª–æ—Ä–æ–¥–æ–º": 0,
    }

    act_vals = list(activity_opts.values())
    res_vals = list(respiration_opts.values())
    pr_vals = list(pressure_opts.values())
    con_vals = list(consciousness_opts.values())
    sp_vals = list(spo2_opts.values())

    act_idx = act_vals.index(getattr(stored, "activity_score", 2)) if getattr(stored, "activity_score", 2) in act_vals else 0
    res_idx = res_vals.index(getattr(stored, "respiration_score", 2)) if getattr(stored, "respiration_score", 2) in res_vals else 0
    pr_idx = pr_vals.index(getattr(stored, "pressure_score", 2)) if getattr(stored, "pressure_score", 2) in pr_vals else 0
    con_idx = con_vals.index(getattr(stored, "consciousness_score", 2)) if getattr(stored, "consciousness_score", 2) in con_vals else 0
    sp_idx = sp_vals.index(getattr(stored, "spo2_score", 2)) if getattr(stored, "spo2_score", 2) in sp_vals else 0

    if stored:
        st.info(f"–¢–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ: –±–∞–ª–ª—ã **{stored.total_score}**")

    with st.form("aldrete_form"):
        activity_label = st.radio("–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å", list(activity_opts.keys()), index=act_idx)
        respiration_label = st.radio("–î—ã—Ö–∞–Ω–∏–µ", list(respiration_opts.keys()), index=res_idx)
        pressure_label = st.radio("–ê—Ä—Ç–µ—Ä–∏–∞–ª—å–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ", list(pressure_opts.keys()), index=pr_idx)
        consciousness_label = st.radio("–°–æ–∑–Ω–∞–Ω–∏–µ", list(consciousness_opts.keys()), index=con_idx)
        spo2_label = st.radio("SpO‚ÇÇ", list(spo2_opts.keys()), index=sp_idx)
        submitted = st.form_submit_button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å", width='stretch')

    if submitted:
        data = AldreteInput(
            activity_score=activity_opts[activity_label],
            respiration_score=respiration_opts[respiration_label],
            pressure_score=pressure_opts[pressure_label],
            consciousness_score=consciousness_opts[consciousness_label],
            spo2_score=spo2_opts[spo2_label],
        )
        saved = ald_upsert_result(person.id, data)
        st.success(f"–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ. –ë–∞–ª–ª—ã: **{saved.total_score}**")
        st.session_state["current_patient_info"] = get_person(person.id)

    back_item = "preoperative_exam" if st.session_state.get("current_patient_info") else "calculators"
    create_big_button(
        "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
        on_click=change_menu_item,
        kwargs={"item": back_item},
        key="back_btn",
    )
