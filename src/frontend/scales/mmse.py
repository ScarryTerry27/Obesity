import streamlit as st

from database.functions import mmse_get_result, mmse_upsert_result, get_person
from database.schemas.mmse import MMSEInput
from frontend.components import create_big_button
from frontend.utils import change_menu_item

GROUPS = [
    ("–û–†–ò–ï–ù–¢–ê–¶–ò–ò", [
        ("orientation_date", "1. –ö–∞–∫–æ–µ —Å–µ–≥–æ–¥–Ω—è —á–∏—Å–ª–æ?"),
        ("orientation_month", "2. –ö–∞–∫–æ–π —Å–µ–π—á–∞—Å –º–µ—Å—è—Ü?"),
        ("orientation_year", "3. –ö–∞–∫–æ–π —Å–µ–π—á–∞—Å –≥–æ–¥?"),
        ("orientation_weekday", "4. –ö–∞–∫–æ–π —Å–µ–≥–æ–¥–Ω—è –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏?"),
        ("orientation_season", "5. –ö–∞–∫–æ–µ —Å–µ–π—á–∞—Å –≤—Ä–µ–º—è –≥–æ–¥–∞?"),
        ("orientation_city", "6. –í –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ –º—ã —Å –í–∞–º–∏ –Ω–∞—Ö–æ–¥–∏–º—Å—è?"),
        ("orientation_region", "7. –í –∫–∞–∫–æ–π –æ–±–ª–∞—Å—Ç–∏ –º—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è?"),
        ("orientation_institution", "8. –ù–∞–∑–æ–≤–∏—Ç–µ —É—á—Ä–µ–∂–¥–µ–Ω–∏–µ, –≤ –∫–æ—Ç–æ—Ä–æ–º –í—ã —Å–µ–π—á–∞—Å –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å"),
        ("orientation_floor", "9. –ù–∞ –∫–∞–∫–æ–º —ç—Ç–∞–∂–µ –º—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è?"),
        ("orientation_country", "10. –í –∫–∞–∫–æ–π —Å—Ç—Ä–∞–Ω–µ –º—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è?"),
    ]),
    ("–í–æ—Å–ø—Ä–∏—è—Ç–∏–µ", [
        ("registration_ball1", "11. –û—Ç–≤–µ—Ç–∏–ª ¬´–ú—è—á¬ª / ¬´–ö–∞—Ä–∞–Ω–¥–∞—à¬ª"),
        ("registration_ball2", "12. –û—Ç–≤–µ—Ç–∏–ª ¬´–§–ª–∞–≥¬ª / ¬´–î–æ–º¬ª"),
        ("registration_ball3", "13. –û—Ç–≤–µ—Ç–∏–ª ¬´–î–≤–µ—Ä—å¬ª / ¬´–ö–æ–ø–µ–π–∫–∞¬ª"),
    ]),
    ("–í–Ω–∏–º–∞–Ω–∏–µ –∏ —Å—á—ë—Ç", [
        ("attention_93", "14. –ü—Ä–∞–≤–∏–ª—å–Ω–æ ¬´93¬ª"),
        ("attention_86", "15. –ü—Ä–∞–≤–∏–ª—å–Ω–æ ¬´86¬ª"),
        ("attention_79", "16. –ü—Ä–∞–≤–∏–ª—å–Ω–æ ¬´79¬ª"),
        ("attention_72", "17. –ü—Ä–∞–≤–∏–ª—å–Ω–æ ¬´72¬ª"),
        ("attention_65", "18. –ü—Ä–∞–≤–∏–ª—å–Ω–æ ¬´65¬ª"),
    ]),
    ("–ü–∞–º—è—Ç—å", [
        ("recall_ball1", "19. –û—Ç–≤–µ—Ç–∏–ª ¬´–ú—è—á¬ª / ¬´–ö–∞—Ä–∞–Ω–¥–∞—à¬ª"),
        ("recall_ball2", "20. –û—Ç–≤–µ—Ç–∏–ª ¬´–§–ª–∞–≥¬ª / ¬´–î–æ–º¬ª"),
        ("recall_ball3", "21. –û—Ç–≤–µ—Ç–∏–ª ¬´–î–≤–µ—Ä—å¬ª / ¬´–ö–æ–ø–µ–π–∫–∞¬ª"),
    ]),
    ("–†–µ—á—å", [
        ("language_clock", "22. –ü–æ–∫–∞–∂–∏—Ç–µ –ø–∞—Ü–∏–µ–Ω—Ç—É —á–∞—Å—ã –∏ —Å–ø—Ä–æ—Å–∏—Ç–µ ¬´–ß—Ç–æ —ç—Ç–æ?¬ª"),
        ("language_pen", "23. –ü–æ–∫–∞–∂–∏—Ç–µ –ø–∞—Ü–∏–µ–Ω—Ç—É —Ä—É—á–∫—É –∏ —Å–ø—Ä–æ—Å–∏—Ç–µ ¬´–ß—Ç–æ —ç—Ç–æ?¬ª"),
        ("language_repeat", "24. –ü–æ–ø—Ä–æ—Å–∏—Ç–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å ¬´–ù–µ –µ—Å–ª–∏, –∏, –∏–ª–∏ –Ω–µ—Ç¬ª"),
    ]),
    ("–û–ø–µ—Ä–∞—Ü–∏—è –∏–∑ 3 –¥–µ–π—Å—Ç–≤–∏–π", [
        ("command_take_paper", "25. –ü–∞—Ü–∏–µ–Ω—Ç –≤–∑—è–ª –ª–∏—Å—Ç –±—É–º–∞–≥–∏ –≤ –ø—Ä–∞–≤—É—é —Ä—É–∫—É"),
        ("command_fold_paper", "26. –ü–∞—Ü–∏–µ–Ω—Ç —Å–ª–æ–∂–∏–ª –ø–æ–ø–æ–ª–∞–º"),
        ("command_put_on_knee", "27. –ü–∞—Ü–∏–µ–Ω—Ç –ø–æ–ª–æ–∂–∏–ª –Ω–∞ –∫–æ–ª–µ–Ω–æ"),
    ]),
    ("–ß—Ç–µ–Ω–∏–µ", [
        ("reading_close_eyes", "28. –ü–∞—Ü–∏–µ–Ω—Ç –∑–∞–∫—Ä—ã–ª –≥–ª–∞–∑–∞"),
    ]),
    ("–ü–∏—Å—å–º–æ", [
        ("writing_sentence", "29. –ü–∞—Ü–∏–µ–Ω—Ç –Ω–∞–ø–∏—Å–∞–ª –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ"),
    ]),
    ("–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ", [
        ("copying_pentagons", "30. –ü–∞—Ü–∏–µ–Ω—Ç –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∞–ª –¥–≤–∞ –ø–µ—Ä–µ—Å–µ–∫–∞—é—â–∏—Ö—Å—è –ø—è—Ç–∏—É–≥–æ–ª—å–Ω–∏–∫–∞."),
    ]),
]


def _show_form(timepoint: int, back_item: str, title: str):
    person = st.session_state.get("current_patient_info")
    if not person:
        st.error("–ü–∞—Ü–∏–µ–Ω—Ç –Ω–µ –≤—ã–±—Ä–∞–Ω.")
        return

    st.subheader(title)
    stored = mmse_get_result(person.id, timepoint)
    defaults = {name: bool(getattr(stored, name, False)) for group in GROUPS for name, _ in group[1]}

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —á–µ–∫–±–æ–∫—Å–æ–≤ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
    for group_name, items in GROUPS:
        for field, _ in items:
            key = f"{field}_{timepoint}"
            if key not in st.session_state:
                st.session_state[key] = defaults.get(field, False)

    if stored:
        st.info(f"–¢–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ: –±–∞–ª–ª—ã **{stored.total_score}**")

    def _mark_all():
        for group_name, items in GROUPS:
            for field, _ in items:
                st.session_state[f"{field}_{timepoint}"] = True

    st.button("‚úÖ –û—Ç–º–µ—Ç–∏—Ç—å –≤—Å–µ", on_click=_mark_all, key=f"mmse_mark_all_{timepoint}")

    with st.form(f"mmse_form_{timepoint}"):
        values = {}
        for group_name, items in GROUPS:
            st.markdown(f"**{group_name}**")
            for field, label in items:
                key = f"{field}_{timepoint}"
                values[field] = st.checkbox(label, key=key)
            st.write("")
        submitted = st.form_submit_button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å", width='stretch')

    if submitted:
        data = MMSEInput(**values)
        saved = mmse_upsert_result(person.id, timepoint, data)
        st.success(f"–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ. –ë–∞–ª–ª—ã: **{saved.total_score}**")
        st.session_state["current_patient_info"] = get_person(person.id)

    create_big_button("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", on_click=change_menu_item, kwargs={"item": back_item}, key=f"back_mmse_{timepoint}")


def show_mmse_t0():
    _show_form(0, "preoperative_exam", "MMSE –¥–æ –æ–ø–µ—Ä–∞—Ü–∏–∏")


def show_mmse_t10():
    _show_form(10, "postoperative_period", "MMSE –ø–æ—Å–ª–µ –æ–ø–µ—Ä–∞—Ü–∏–∏")
